PROGRAM REL2ABS

  IMPLICIT NONE
  REAL, DIMENSION(2,11)		:: prem
  INTEGER				:: n1layer_adpx, px, lay, check, i, j
  INTEGER, PARAMETER		:: nlay=11
  CHARACTER(LEN=100)		:: vsvfile, vshfile, anifile
  REAL				:: vsv, vsv_abs, vsh, vsh_abs, ani_abs

  !====================================================================!
  ! get infos
  print*,"number of pixels per layer?"
  read*,n1layer_adpx

  print*,"vsv file?"
  read*, vsvfile

   print*,"vsh file?"
   read*, vshfile
 
   print*,"where to write anisotropy?"
   read*, anifile

   open(11,file=trim(vshfile))
   open(12,file=trim(vshfile)//".abs")

   open(21,file=trim(vsvfile))
   open(22,file=trim(vsvfile)//".abs")

   open(32,file=trim(anifile))


  !====================================================================!
  ! prem stores the value in the middle of the layers for vsv(2) and vsh(1)
  prem(1,1) = 4602.3789062
  prem(1,2) = 4586.2246094
  prem(1,3) = 4563.7885742
  prem(1,4) = 4541.2636719
  prem(1,5) = 4419.8896484
  prem(1,6) = 4485.6220703
  prem(1,7) = 4440.7500000
  prem(1,8) = 4678.8999023
  prem(1,9) = 4932.4873047
  prem(1,10) = 5516.0175781
  prem(1,11) = 6261.1708984

  prem(2,1) = 4398.4633789
  prem(2,2) = 4402.6103516
  prem(2,3) = 4408.3701172
  prem(2,4) = 4414.1298828
  prem(2,5) = 4419.8896484
  prem(2,6) = 4428.4140625
  prem(2,7) = 4439.9335938
  prem(2,8) = 4678.8999023
  prem(2,9) = 4932.4873047 
  prem(2,10) = 5516.0175781
  prem(2,11) = 6261.1708984 


  do lay=1,nlay
  do px=1,n1layer_adpx
 	read(11,*) i, vsh
	read(21,*) j, vsv

	! check if reading correct
      check=px+(lay-1)*n1layer_adpx
      if (i/=check) stop "problem with vsh file"
      check=px+(lay-1)*n1layer_adpx+nlay*n1layer_adpx
      if (j/=check) stop "problem with vsv file"


      ! calculate absolute values
      vsh_abs=(vsh/100)*prem(1,lay) + prem(1,lay)
      vsv_abs=(vsv/100)*prem(2,lay) + prem(2,lay)
      ani_abs=vsh_abs**2 / vsv_abs**2


      !write results
 	write(12,*) i, vsh_abs
	write(22,*) j, vsv_abs
	write(32,*) j+nlay*n1layer_adpx, ani_abs

  end do
  end do







END PROGRAM REL2ABS